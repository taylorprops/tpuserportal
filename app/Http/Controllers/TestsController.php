<?php

namespace App\Http\Controllers;

use Monolog\Logger;
use App\Models\User;
use App\Helpers\Helper;
use Illuminate\Http\Request;
use App\Models\Backups\Rsync;
use App\Models\Employees\Agents;
use Illuminate\Support\Facades\DB;
use Monolog\Handler\StreamHandler;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Crypt;
use App\Models\BrightMLS\BrightOffices;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Facades\Storage;
use App\Models\BrightMLS\BrightListings;
use App\Models\Employees\EmployeesNotes;
use Illuminate\Database\Eloquent\Builder;
use App\Models\BrightMLS\BrightAgentRoster;
use App\Models\Employees\EmployeesLicenses;
use App\Models\OldDB\Company\BillingInvoices;
use App\Models\Marketing\LoanOfficerAddresses;
use App\Models\DocManagement\Admin\Forms\Forms;
use App\Models\DocManagement\Archives\Documents;
use App\Models\OldDB\Company\BillingInvoicesItems;
use App\Models\DocManagement\Archives\Transactions;
use App\Models\Employees\Mortgage as LoanOfficersNew;
use App\Models\OldDB\LoanOfficers as LoanOfficersOld;
use App\Models\DocManagement\Resources\CommonFieldsGroups;

class TestsController extends Controller
{

    public function test(Request $request) {


        exec('/usr/bin/rsync -chavzPO  --delete --ignore-existing --stats /mnt/vol2/backups/ --exclude "scripts" root@162.244.66.22:/mnt/sdb/storage/mysql 2>&1', $output);
        //exec("cd /mnt/vol2/backups && ls 2>&1", $output);
        dump($output);
        $rsync = new Rsync;
        $rsync -> site = 'All';
        $rsync -> backup_type = 'database';
        $rsync -> response = json_encode($output);
        $rsync -> save();

    }

    public function edit_los(Request $request) {

        //dump(count(LoanOfficerAddresses::whereNull('full_name') -> get()));

        // LoanOfficerAddresses::chunkById(10, function($loan_officers) {
        //     foreach ($loan_officers as $loan_officer) {
        //         $loan_officer -> full_name = $loan_officer -> first_name.' '.$loan_officer -> last_name;
        //         dump($loan_officer -> first_name.' '.$loan_officer -> last_name);
        //         $loan_officer -> save();
        //     }
        // }) -> limit(50);

        $loan_officers = LoanOfficerAddresses::whereRaw('length(state) > 2') -> limit(10000) -> get();

        foreach ($loan_officers as $loan_officer) {
            $state = 'MD';
            if (stristr($loan_officer -> state, 'dc')) {
                $state = 'DC';
            } elseif (stristr($loan_officer -> state, 'va')) {
                $state = 'VA';
            }
            $loan_officer -> state = $state;
            $loan_officer -> save();
        }
    }


    public function bright_add_listings(Request $request) {

        $rets = Helper::rets_login();

        if($rets) {
            $statuses =['ACTIVE UNDER CONTRACT', 'ACTIVE', 'TEMP OFF MARKET', 'PENDING'];
            $keys = [300342337573, 300344124664, 300345192468, 300345207030, 300347741397, 300347854678, 300347947928, 300349070336, 300349569753, 300349581610, 300349642395, 300349736970, 300349805002, 300352299495, 300352738797, 300352782198, 300353648580, 300354523939, 300354531349, 300354541435, 300354550020, 300356880896, 300357254361, 300358610191, 300359427931, 300359434471, 300359434523, 300359434630, 300359439680, 300359444345, 300359446239, 300359447030, 300359448017, 300359458231, 300359458333, 300359459632, 300359660481, 300360202522, 300360205017, 300360269429, 300360270008, 300360286652, 300360291167, 300360291684, 300360302421, 300360304957, 300360305207, 300360322652, 300360770155, 300360882507, 300360882981, 300360883063, 300360884553, 300360885663, 300360886492, 300360888281, 300360890038, 300360969639, 300360970023, 300360972622, 300360976100, 300360977359, 300360981321, 300360981382, 300360982217, 300360984942, 300360993964, 300360996404, 300361010631, 300361010809, 300361014077, 300361017332, 300361018088, 300361026343, 300361109609, 300361178338, 300361178495, 300361184882, 300361187947, 300361188496, 300361200702, 300361202332, 300361206003, 300361211226, 300361211447, 300361232393, 300361232495, 300361237325, 300361245767, 300361265528, 300361329163, 300362599961, 300363426945, 300363693639, 300364087461, 300364481827, 300364920702, 300365844728, 300365876437, 300366301918, 300366926773, 300367018881, 300367567662, 300367822939, 300369796454, 300369874376, 300371031361, 300371395215, 300371747034, 300373497699, 300373799492, 300377232221, 300377830197, 300377843522, 300378717779, 300379290216, 300379760822, 300383265044, 300383270909, 300383279125, 300384945378, 300387510310, 300387512200, 300387520433, 300387524206, 300387524762, 300387531102, 300387532685, 300387533798, 300387960726, 300391254954, 300392070327, 300396359087, 300397916749, 300399790596, 300403674173, 300405689405, 300406067638, 300406072538, 300406074530, 300406076729, 300406080663, 300406085652, 300407083617, 300408000275, 300408551493, 300409440907, 300409990121, 300410029923, 300410043387, 300410044751, 300410713124, 300411172351, 300413133400, 300413560182, 300413603528, 300414045174, 300414068386, 300414389756, 300415091355, 300416124453, 300416918280, 300418131282, 300418265540, 300418277484, 300418294497, 300418809388, 300418809487, 300418835554, 300418836839, 300418837720, 300418948566, 300418960784, 300418964072, 300418967047, 300418973510, 300419061108, 300419164044, 300419166616, 300419182027, 300419187157, 300419188169, 300419215744, 300419251687, 300419261993, 300419292547, 300419296661, 300420515144, 300420557518, 300420686480, 300422443209, 300424470009, 300424554305, 300427262861, 300430662048, 300430680096, 300430719024, 300431665367, 300431687945, 300431721828, 300432585724, 300432747553, 300433303393, 300433303458, 300433308846, 300433313474, 300433333051, 300433337134, 300433339888, 300433347163, 300433352711, 300433544477, 300433547525, 300433553994, 300433555719, 300433555780, 300433558118, 300433558175, 300433561697, 300433562922, 300433567830, 300433568004, 300433579610, 300433715391, 300433720149, 300433720728, 300433738984, 300433747159, 300434694023, 300435468065, 300438437034, 300439234040, 300439242044, 300439251688, 300439267789, 300439281306, 300439284273, 300439295301, 300439297450, 300439300304, 300439304475, 300439306461, 300439308836, 300439317381, 300439325918, 300439328686, 300439329676, 300439331955, 300439334276, 300439337282, 300439338109, 300439339110, 300439341671, 300439346308, 300439347248, 300439987231, 300440116466, 300440339794, 300440994185, 300443016079, 300443794771, 300443797258, 300443798444, 300444981796, 300444992356, 300445015586, 300445018808, 300445038233, 300445039286, 300445855242, 300447900961, 300448370703, 300448483841, 300448501818, 300448514315, 300448533090, 300448559463, 300448562743, 300448571134, 300448574249, 300449007145, 300449015309, 300449016821, 300449094654, 300449108662, 300449122836, 300449145538, 300449179096, 300449487612, 300450669706, 300450718531, 300450762383, 300450779313, 300450807938, 300451023203, 300451301715, 300451327693, 300451400609, 300451464582, 300451670688, 300451674424, 300451702689, 300452217795, 300452246515, 300453398466, 300453398533, 300453400164, 300453400238, 300454272197, 300454396689, 300454413317, 300454415845, 300454560068, 300454564351, 300454954588, 300455150446, 300455787147, 300455799802, 300455966793, 300456311074, 300457856500, 300459659268, 300460367876, 300460431294, 300460555202, 300461568446, 300462503415, 300462760335, 300462821715, 300462827903, 300463292012, 300464107526, 300464391584, 300465855320, 300466378890, 300470917887, 300470995258, 300474983400, 300475893154, 300476078470, 300476081451, 300476486902, 300476997899, 300477208310, 300477615609, 300478246258, 300479555382, 300481215937, 300481658139, 300481696394, 300483058493, 300483582682, 300483645046, 300483706621, 300483881188, 300485644838, 300485659716, 300489505305, 300490075053, 300490658345, 300491769815, 300492729658, 300492876754, 300496036362, 300496139498, 300496147890, 300496301919, 300496518919, 300496586359, 300497539507, 300497641961, 300497872429, 300498153925, 300498456755, 300498848404, 300498969644, 300500477179, 300500611645, 300500645929, 300500654119, 300502084534, 300502121997, 300502132664, 300502369545, 300503073926, 300503117060, 300504103790, 300504151574, 300504167778, 300505421128, 300505581241, 300506477463, 300511326700, 300521400616, 300533213888, 300557677973, 300559019937, 300577080370, 300577731714, 300579344400, 300586441732, 300636083380, 300647245029, 300647246931, 300651220396, 300651296970, 300652482507, 300677520242, 300677571212, 300678599041, 300683525398, 300686262553, 300687534622, 300689807776, 300690280098, 300698425547, 300703607596, 300722830868, 300729339200, 300731738505, 300740924983, 300741120623, 300741145310, 300745353932, 300745435305, 300747938644, 300747957652, 300747994782, 300748031779, 300748041840, 300748061268, 300748088746, 300756807196, 300757392367, 300760814420, 300773743035, 300776664248, 300783778306, 300784161838, 300785126843, 300791791352, 300801471246, 300833249686, 300833249919, 300834538750, 300836025970, 300854843976, 300864224753, 300864528683, 300864802717, 300864869692, 300864929834, 300874622687, 300874689567, 300874757812, 300874758147, 300874758544, 300874759860, 300875095945, 300894637429, 300895487380, 300906484263, 300910723264, 300911967119, 300920883087, 300925531529, 300931283555, 300931558292, 300952528407, 300952637054, 300952735815, 300952798531, 300955686729, 300955777551, 300956020070, 300960496179, 300960724525, 300960802368, 300960888246, 300960983511, 300960999487, 300961141704, 300961782816, 300970139740, 300970713160, 300982144816, 300982888597, 300983933942, 300986682465, 300986968493, 300988873132, 300989084597, 300991799920, 300992953181, 300992959567, 300993057323, 300995739284, 300997244466, 301005667945, 301006058193, 301007153345, 301012696240, 301012785163, 301019195249, 301023366801, 301024191655, 301024443809, 301024911231, 301024917909, 301024927565, 301024935384, 301048972382, 301065459279, 301065482868, 301065605887, 301065713350, 301080326999, 301103638630, 301103702219, 301103984756, 301107679065, 301108454647, 301153833446, 301153964345, 301156733719, 301162282796, 301162858535, 301164434418, 301164526214, 301170638985, 301174948101, 301175281667, 301175465794, 301177363201, 301178972330, 301179233805, 301179912135, 301182150402, 301187611401, 301187656198, 301188684210, 301188810381, 301190064380, 301190899077, 301191080039, 301201704975, 301206887424, 301207880488, 301208400994, 301208847682, 301241664899, 301245273628, 301250292544, 301251073724, 301254211889, 301254615536, 301254648621, 301254697062, 301254863969, 301254915918, 301254926918, 301255030891, 301255044127, 301255054860, 301255071309, 301255085451, 301260208706, 301266142590, 301268459531, 301270851374, 301271030438, 301272136466, 301272172353, 301272634800, 301272982573, 301273223393, 301274740973, 301275536063, 301275774636, 301275994638, 301276035219, 301276136119, 301276273404, 301276299385, 301276332439, 301276352582, 301276370178, 301276973286, 301277432000, 301278176697, 301278395171, 301279902532, 301280017673, 301281833589, 301283383321, 301283681821, 301284087087, 301284887979, 301285752094, 301286296381, 301286838881, 301286870627, 301287670634, 301288098715, 301288271171, 301288418006, 301288568341, 301288649348, 301290660457, 301290851834, 301291510442, 301291747045, 301291783619, 301292117034, 301292825943, 301294619805, 301295355153, 301295654566, 301295657791, 301295816278, 301295875291, 301295887892, 301297533689, 301299594053, 301299609744, 301299828447, 301299965534, 301300473913, 301301632167, 301303693663, 301305090736, 301305168137, 301305584252, 301306735760, 301308043232, 301308308971, 301308326315, 301308471390, 301308511239, 301308609571, 301308651294, 301308677094, 301308758472, 301309182829, 301309264031, 301311990973, 301313205408, 301333231190, 301344217444, 301352236616, 301352499788, 301353164717, 301353656198, 301355129205, 301378975689, 301379626643, 301380094253, 301381868035, 301384954380, 301385054144, 301385148954, 301385347243, 301385485211, 301385785768, 301385814687, 301386844586, 301386898421, 301387735219, 301387781440, 301387886342, 301387983429, 301388096172, 301389353002, 301391576295, 301391911735, 301394561059, 301395527462, 301401028557, 301402086770, 301404521751, 301411688833, 301413371516, 301416108159, 301423996932, 301428701889, 301435335071, 301436664664, 301439077660, 301441811769, 301442037587, 301452342772, 301452723616, 301452835414, 301454983890, 301459053396, 301463231389, 301465550740, 301466280443, 301467648789, 301467684625, 301469411001, 301470001061, 301470440063, 301470946531, 301470963562, 301471052349, 301471837630, 301471855709, 301472024659, 301474336016, 301475296108, 301475339394, 301475364959, 301475669586, 301476984356, 301477155602, 301477649516, 301478086353, 301478148419, 301478187616, 301479730218, 301480008900, 301481801380, 301481889760, 301481928678, 301482497811, 301482727696, 301483087404, 301484263579, 301484271431, 301484361064, 301484529962, 301485347569, 301485809940, 301486449738, 301487360021, 301488430269, 301488444541, 301488468786, 301488493141, 301488516028, 301488539653, 301488588607, 301488601130, 301488736761, 301490124580, 301490512344, 301491520378, 301495134677, 301495498375, 301495507098, 301502258499, 301502882958, 301503046760, 301503191283, 301503306544, 301503499131, 301504278332, 301506653201, 301507278859, 301507754432, 301508006908, 301508895256, 301509037642, 301509091192, 301511462961, 301511841062, 301511999874, 301513069545, 301513282821, 301517684187, 301518240172, 301519615488, 301524849916, 301526085788, 301532747709, 301543706755, 301543914761, 301544014816, 301545650660, 301550391818, 301550885923, 301550908366, 301550909063, 301550956398, 301550966985, 301551027421, 301551066162, 301551092672, 301551517635, 301551580838, 301552014235, 301553414113, 301553914899, 301554853841, 301554889687, 301554948072, 301556382863, 301557633457, 301559059913, 301559346697, 301559477903, 301559488502, 301559595169, 301560015265, 301560279429, 301562551321, 301563284963, 301563460703, 301563660022, 301563760208, 301563882178, 301563947750, 301564220744, 301564321281, 301564539606, 301564578505, 301564629475, 301565701582, 301566142121, 301566425619, 301566668473, 301566860487, 301567056167, 301567203037, 301568192398, 301568495951, 301568546495, 301568814482, 301569077561, 301569329513, 301569448637, 301571438360, 301571551765, 301571968112, 301572881856, 301573491176, 301574407173, 301580225631, 301581245575, 301581245911, 301582439746, 301584240786, 301584676839, 301590490922, 301591905922, 301591948845, 301593495126, 301593692508, 301598339087, 301598646316, 301601543112, 301601679663, 301601770951, 301601837336, 301602781489, 301602836562, 301604176683, 301604248068, 301605043445, 301606496863, 301607401535, 301607443962, 301607805052, 301607944498, 301609417604, 301609855368, 301610516323, 301610629116, 301610692792, 301611015246, 301611457170, 301612993389, 301616209620, 301616344239, 301616526514, 301617633868, 301618925174, 301619454305, 301620115185, 301620329730, 301621135005, 301625855031, 301626391703, 301627656260, 301628774409, 301629005378, 301629177807, 301629336890, 301629486178, 301629630500, 301631255560, 301631523198, 301631891648, 301631919685, 301632300861, 301632642424, 301632756946, 301635108194, 301635358765, 301636136887, 301636142113, 301637096309, 301637623375, 301637748271, 301637878880, 301638286817, 301638779166, 301643045518, 301644890372, 301645073140, 301645407542, 301645477399, 301646113336, 301646884081, 301647782008, 301648156525, 301650227088, 301650415631, 301650552847, 301650681157, 301650752789, 301651077206, 301651082914, 301651211263, 301653707342, 301653752813, 301655531286, 301655574557, 301655589698, 301655600625, 301655615721, 301657268476, 301657682240, 301657700579, 301657793943, 301658007709, 301658033406, 301658974208, 301659780769, 301659840249, 301660465487, 301660596825, 301660880088, 301662251893, 301663314578, 301663435795, 301665713630, 301665801202, 301666626283, 301669255298, 301669677345, 301669763779, 301671032307, 301671056252, 301671080562, 301671348435, 301674071998, 301674462371, 301674700012, 301674755048, 301675110315, 301675924239, 301676087988, 301677551880, 301677978926, 301681473632, 301684064704, 301685094085, 301685151450, 301685291330, 301686937569, 301687038902, 301688379465, 301688746959, 301690006802, 301693659123, 301696280194, 301696651885, 301698308909, 301698547996, 301698726987, 301699111572, 301699327019, 301699343005, 301699574524, 301700074259, 301700088448, 301701425319, 301702001439, 301702013223, 301702137998, 301702280094, 301702545700, 301702765939, 301703189368, 301704035495, 301704745371, 301709775882, 301710586957, 301710810099, 301713113563, 301713750254, 301713896410, 301715518504, 301715693444, 301715947129, 301716155442, 301719324252, 301719617640, 301720143849, 301720715334, 301720746628, 301721085530, 301722555369, 301723351197, 301726100482, 301726239241, 301726983437, 301727049089, 301727066771, 301729209293, 301731636848, 301731891369, 301733119479, 301733409473, 301733427730, 301734467850, 301735690671, 301735801397, 301735980199, 301736023697, 301736602717, 301737526721, 301738265350, 301738324749, 301738676944, 301738767057, 301738945786, 301739354409, 301741939245, 301743730760, 301745453790, 301748572160, 301749286941, 301749304566, 301749319753, 301749336887, 301749348768, 301749357376, 301749368150, 301749379020, 301751305474, 301751421122, 301752475921, 301752704304, 301752835252, 301753193582, 301755867697, 301756004255, 301756366720, 301756839327, 301758303235, 301759177133, 301760088552, 301766050514, 301766139306, 301766184760, 301766453228, 301766556632, 301766866909, 301766885861, 301766910191, 301767591846, 301768605456, 301768662810, 301768755149, 301769445923, 301769500307, 301769692161, 301769850015, 301769980682, 301770704855, 301772248658, 301772588781, 301774087289, 301774680994, 301774745550, 301775219093, 301775288097, 301775378606, 301775506709, 301776446876, 301779359125, 301779529539, 301779725733, 301779877107, 301783093841, 301784857930, 301784973708, 301786257547, 301787877368, 301788647524, 301788705891, 301789022195, 301791032609, 301792707196, 301792717743, 301792739427, 301793220772, 301793742660, 301793867985, 301793975695, 301794005466, 301795108771, 301797400826, 301797409262, 301797493104, 301797567957, 301798497305, 301803995602, 301806325253, 301807024577, 301807055563, 301807656434, 301808250756, 301808292803, 301808309352, 301808317972, 301810224765, 301810439706, 301810576157, 301810583902, 301810591952, 301810601451, 301810676038, 301810683303, 301810692905, 301810708921, 301810715666, 301810725578, 301810970940, 301810979569, 301810989463, 301811003015, 301811037239, 301811046452, 301811052341, 301811085604, 301811111819, 301811119375, 301811131688, 301811148355, 301811151442, 301811170537, 301811186593, 301811187709, 301811884484, 301812524382, 301813097293, 301813853847, 301814512579, 301814614173, 301814737874, 301814909574, 301815000490, 301815325530, 301815370739, 301816192845, 301817079081, 301818014009, 301818278613, 301818306590, 301818871103, 301819137870, 301821609372, 301821727570, 301822951839, 301824327340, 301824589627, 301824921880, 301826762279, 301827568755, 301827708923, 301828095848, 301828946011, 301828947610, 301828948948, 301828949099, 301828950170, 301828975542, 301829117020, 301829119817, 301829126584, 301829151932, 301829153304, 301829224108, 301829238520, 301829247862, 301829265131, 301829338055, 301829347793, 301829379009, 301829435279, 301829568176, 301829579488, 301829658536, 301829804884, 301829981125, 301830018900, 301831145576, 301837931737, 301838186960, 301839668048, 301839860195, 301839902940, 301839919929, 301839981793, 301840969896, 301842504663, 301843020950, 301843425145, 301843732104, 301844156663, 301844644397, 301846214965, 301850237140, 301850295325, 301852043655, 301854520459, 301854681794, 301855933656, 301857952173, 301860592474, 301860755918, 301870147515, 301870190295, 301870991057, 301872973300, 301873013453, 301873074438, 301876547718, 301876799118, 301879354373, 301879392813, 301879666847, 301879788882, 301880209423, 301880466452, 301884703288, 301889816040, 301892617105, 301892772030, 301893279049, 301893760775, 301894510359, 301896233698, 301896356639, 301897462205, 301900236558, 301900333111, 301900345096, 301900563550, 301900605833, 301900644347, 301900707115, 301900787730, 301900885870, 301902602797, 301903100416, 301904992844, 301905239892, 301905257554, 301905296696, 301907382893, 301907726180, 301907747750, 301908025352, 301908109067, 301909998259, 301911072429, 301911113426, 301911131123, 301911503081, 301911678883, 301911762003, 301912053568, 301913180688, 301913677631, 301916286460, 301916433693, 301917130697, 301917258055, 301917917971, 301918605241, 301919006593, 301919034030, 301919048594, 301919233372, 301919370788, 301920565101, 301923437295, 301925531892, 301927087267, 301927322650, 301927536157, 301928152971, 301928205019, 301928281577, 301929315240, 301929656112, 301930182103, 301930985541, 301931243403, 301931729381, 301931987415, 301933329061, 301934527164, 301935755203, 301935826020, 301936624354, 301938801856, 301939297237, 301939680061, 301940041173, 301940346235, 301940399743, 301943938650, 301944163779, 301947152970, 301947473819, 301947475840, 301947525055, 301947589372, 301947618879, 301947725264, 301947854334, 301947887137, 301949679754, 301950881546, 301952578899, 301953820530, 301954779989, 301956646521, 301957035677, 301959515545, 301959737632, 301960012293, 301960364677, 301960485770, 301960702573, 301960897932, 301960936009, 301961001287, 301962740897, 301962812819, 301963169610, 301967388835, 301967726149, 301971334812, 301972696219, 301972976732, 301973265061, 301973351262, 301973491271, 301973958802, 301974157636, 301974471734, 301974857913, 301975175987, 301975183608, 301975623524, 301975896175, 301976518952, 301976581145, 301976606878, 301976675924, 301976749896, 301977351904, 301977610166, 301980184311, 301980392421, 301980582576, 301980669805, 301980766948, 301980956259, 301983299768, 301983449201, 301983506047, 301983564512, 301983733101, 301983770530, 301986467942, 301986766575, 301987193396, 301988062873, 301989590051, 301991799661, 301994055532, 301994225133, 301994500366, 301994567040, 301996118812, 301996320894, 301996372652, 301996614495, 301996731527, 301996785293, 301998735917, 301999557404, 302002181263, 302002457206, 302002636877, 302004617737, 302005348156, 302006287219, 302007779357, 302010415486, 302011580994, 302012160489, 302012864256, 302013288958, 302015038249, 302015456939, 302015632097, 302015821439, 302015991246, 302016032914, 302016100667, 302016136339, 302016228245, 302016259510, 302016858202, 302017961304, 302018014780, 302018805183, 302018925067, 302019001094, 302019342061, 302019456061, 302019743821, 302019765330, 302019794780, 302021696502, 302022102288, 302022418281, 302022774057, 302023104857, 302026589228, 302027453073, 302027547499, 302027670776, 302027803676, 302031251245, 302031439841, 302031604471, 302032049237, 302032357939, 302033902649, 302035287574, 302035336845, 302037579110, 302037937411, 302038108190, 302038539737, 302038645999, 302038734268, 302040084936, 302041131489, 302041186135, 302041350107, 302041414516, 302041456754, 302041480130, 302042157367, 302042238045, 302043812154, 302043812369, 302044279853, 302044403833, 302044467420, 302045209617, 302045301689, 302045546965, 302045742626, 302046316322, 302049119480, 302049960581, 302049977777, 302050211037, 302050275681, 302050507610, 302050629789, 302050745958, 302051444895, 302052908951, 302053931419, 302056698559, 302057193177, 302057318022, 302057567301, 302059038618, 302059187566, 302059254077, 302060445521, 302060759757, 302062903292, 302063042843, 302064030049, 302065735649, 302065996541, 302066114865, 302066187776, 302066202504, 302066204740, 302066206273, 302066252183, 302066268442, 302066283357, 302067497008, 302067769528, 302067809314, 302068556811, 302068694787, 302069150031, 302069302502, 302069339297, 302069341224, 302069727788, 302070292439, 302071560485, 302072020315, 302072047851, 302072283650, 302074091428, 302074327588, 302075952175, 302079004629, 302081228894, 302081432115, 302081615211, 302082271647, 302083334633, 302085582355, 302085609564, 302085941713, 302086009315, 302086250117, 302086264841, 302086474983, 302086740592, 302086837345, 302086874885, 302086905479, 302086986959, 302087010109, 302087030031, 302087129379, 302087271168, 302089119667, 302089161152, 302089647832, 302090070579, 302091658104, 302091748568, 302092436039, 302092492919, 302092730919, 302092737780, 302092858309, 302093079515, 302093220058, 302095117927, 302095190079, 302095931697, 302098122651, 302098384843, 302098818949, 302102896297, 302103281880, 302103538429, 302104467869, 302104598569, 302104941726, 302104990912, 302105162337, 302105208647, 302105238247, 302105262545, 302105420013, 302106243928, 302107598570, 302108314724, 302109277071, 302109612608, 302109867688, 302110023652, 302111136104, 302111274404, 302111691025, 302112162130, 302112639609, 302112873300, 302113271768, 302115029769, 302115713519, 302116187251, 302116267211, 302118283058, 302118299253, 302118397660, 302118402437, 302118406129, 302118407294, 302118409986, 302118412239, 302118415589, 302118418242, 302118421995, 302118431264, 302118433024, 302118434149, 302118436082, 302118440156, 302118515403, 302118516309, 302118523592, 302118524178, 302118526765, 302118921048, 302118958153, 302119671343, 302120114084, 302120813953, 302120815391, 302121065950, 302121539266, 302121941785, 302121994168, 302122031869, 302122483205, 302124203635, 302124237004, 302124261418, 302124296244, 302126634320, 302126649042, 302127519233, 302127540428, 302127844314, 302128128546, 302129025448, 302129033455, 302129088442, 302130005217, 302130339767, 302130429652, 302130727218, 302131217548, 302131871926, 302132234793, 302132492944, 302132599856, 302132817832, 302132845245, 302133181340, 302133500635, 302133661502, 302133690789, 302133954137, 302135330064, 302135360889, 302135404517, 302135460726, 302135750302, 302135800603, 302135875885, 302135919462, 302136705818, 302137442969, 302137487807, 302137520372, 302137624467, 302137650604, 302137662997, 302137828342, 302137867485, 302137919209, 302138047646, 302138125259, 302138168281, 302138213240, 302138359094, 302139181716, 302139240713, 302140011469, 302140020891, 302140132353, 302140341915, 302140344353, 302140414019, 302140501028, 302140562227, 302140748100, 302141194688, 302141219133, 302141229406, 302142007727, 302142902105, 302143004424, 302143190850, 302143281237, 302143625675, 302144410037, 302144425442, 302144897849, 302144907292, 302145062065, 302145329219, 302145438717, 302145445068, 302145516959, 302145663780, 302145702431, 302145863346, 302145866734, 302145961122, 302145964770, 302146037433, 302146402505, 302146535526, 302146552268, 302146757162, 302146916209, 302146946911, 302146981233, 302147018477, 302147086626, 302147452088, 302147516749, 302147552558, 302147699299, 302148121040, 302148213762, 302148279923, 302148300929, 302148666719, 302148834540, 302148951088, 302149223918, 302149611031, 302149736041, 302150474826, 302150520787, 302150727103, 302150816173, 302150829980, 302150849595, 302150858844, 302150968754, 302150980281, 302151029180, 302151368275, 302152247811, 302152409792, 302152429069, 302152500002, 302152605667, 302152798558, 302152981536, 302153064478, 302153462545, 302153468077, 302153571497, 302153778955, 302154905265, 302155162759, 302155211690, 302155222653, 302155269767, 302155306438, 302155406619, 302155437904, 302155460511, 302155466416, 302155473229, 302155483814, 302155520790, 302155586752, 302155885659, 302155898009, 302155907394, 302155946127, 302155973100, 302156000296, 302156006670, 302156014077, 302156048045, 302156056004, 302156327010, 302157391866, 302157800039, 302158033054, 302159079959, 302159366069, 302159386562, 302159426554, 302159459856, 302159476788, 302159490267, 302159501739, 302159515518, 302159533933, 302159546061, 302159560532, 302159568160, 302159631495, 302159633437, 302159844782, 302159967392, 302160031037, 302160367232, 302160589860, 302160737580, 302160947781, 302161222624, 302161268992, 302161272836, 302161993720, 302162037344, 302162288773, 302162308001, 302162326037, 302163157382, 302163206850, 302163207332, 302163210268, 302163268843, 302163282007, 302163313434, 302163337909, 302163355546, 302163418740, 302163419043, 302163442563, 302163466908, 302163508658, 302163521296, 302164233249, 302164377975, 302164428416, 302164589988, 302164726515, 302165422952, 302165425259, 302165523835, 302166280644, 302167194801, 302167215033, 302167312223, 302167361095, 302167442231, 302167458093, 302167467230, 302167473953, 302167518092, 302167633025, 302167806996, 302167814876, 302168912526, 302169611258, 302169808767, 302169855933, 302169893778, 302169904825, 302170397521, 302171225351, 302171265789, 302171551973, 302171597225, 302171614671, 302172286477, 302172440004, 302172442876, 302172453721, 302172679988, 302173102520, 302173166130, 302173195601, 302173206157, 302173606870, 302174201111, 302174818847, 302174854897, 302175560960, 302176212020, 302176288872, 302176336784, 302176731055, 302178885780, 302179034647, 302179461057, 302179743414, 302179745965, 302180554586, 302180712633, 302180875791, 302180939629, 302180957850, 302181680466, 302181851291, 302181905861, 302182152801, 302182766634, 302183515052, 302183766227, 302183890548, 302183922443, 302184266854, 302184279959, 302184307263, 302184444248, 302184557408, 302184899190, 302184899659, 302186275322, 302186275608, 302186312122, 302186324252, 302186365911, 302186437027, 302186477652, 302186532794, 302186651525, 302186679917, 302186787493, 302186788090, 302186788397, 302186816237, 302187008013, 302187032748, 302187205375, 302187311904, 302187380509, 302187603212, 302187784854, 302187991973, 302188006928, 302188147546, 302188361385, 302188794688, 302188843114, 302188855778, 302189255706, 302189483741, 302189578379, 302189596710, 302189617896, 302189994706, 302190012522, 302190445157, 302190500158, 302190511529, 302190517133, 302191211910, 302191366003, 302191693916, 302191795302, 302191942571, 302192151949, 302192204665, 302192413375, 302192504996, 302192606987, 302192952648, 302193443056, 302193488355, 302193748130, 302193757062, 302193862999, 302194106232, 302194179814, 302194509405, 302194707117, 302194707236, 302194710539, 302195515402, 302195593399, 302195644707, 302195976176, 302196005647, 302196038015, 302196090274, 302196166792, 302196193789, 302196251316, 302196303536, 302196540786, 302196547325, 302197633773, 302197773256, 302197835343, 302197860726, 302198033103, 302198298810, 302198602214, 302199037824, 302199104775, 302199292207, 302199437822, 302199622094, 302199896167, 302199905753, 302200099495, 302200116247, 302200512283, 302200538482, 302200723733, 302200861617, 302201019745, 302201049861, 302201239211, 302201339336, 302201378032, 302201387033, 302201470520, 302201695266, 302202125715, 302202347236, 302202520192, 302202637362, 302202661831, 302202804050, 302203294262, 302203317952, 302203441262, 302203546961, 302203777115, 302204055876, 302204170282, 302204199030, 302204452512, 302204506298, 302204764905, 302204823518, 302205108584, 302205135420, 302205304343, 302205342149, 302205363431, 302205390703, 302205548663, 302205559805, 302205702319, 302205841675, 302205846979, 302205875266, 302205890620, 302206300568, 302206383083, 302206551715, 302206663662, 302206696597, 302206718487, 302206747513, 302206810013, 302206836765, 302206897749, 302206935764, 302207232073, 302207305183, 302207429515, 302207449681, 302207481806, 302207497798, 302207516620, 302207530344, 302207612645, 302207800387, 302207928441, 302208169067, 302208210053, 302208483790, 302208567975, 302208572752, 302208839056, 302209062417, 302209067802, 302209079260, 302209161455, 302209168489, 302209241035, 302209312793, 302209648443, 302210452536, 302210629810, 302210724182, 302211005181, 302211035759, 302211050564, 302211082392, 302211178610, 304000270872, 304000402024, 304000475976, 304000552576, 304000632770, 304000868691, 304001013132, 304001185655, 304001339344, 304001362890, 304001894355, 304001976690, 304002251027, 304002326430, 304002529754, 304002587929, 304002595986, 304002636855, 304002690952, 304002700452, 304002754135, 304003065363, 304003791730, 304003821446, 304004270499, 304004662695, 304004868588, 304005022053, 304005405024, 304005453435, 304005478944, 304005491104, 304005755055, 304005777224, 304006001777, 304006035094, 304006250461, 304006316320, 304006333314, 304006403825, 304006405564, 304006852831, 304006864558, 304006894398, 304007021599, 304007207010, 304007315806, 304007338951, 304007435422, 304007894959, 304008173911, 304008338750, 304008501850, 304008503180, 304008614472, 304008621354, 304008777306, 304008888910, 304008905796, 304008955500, 304009093094, 304009279937, 304009309090, 304009365304, 304009385887, 304009392407, 304009405982, 304009413886, 304009418249, 304009424529, 304009442654, 304009450164, 304009457762, 304009463866, 304009472053, 304010597880, 304010694580, 304010737587, 304010752843, 304010861406, 304011079152, 304011218701, 304011287530, 304011469462, 304011496497, 304012260386, 304012858541, 304012958566, 304013006531, 304013677833, 304013697963, 304013703351, 304013703958, 304013708168, 304014806114, 304014868192, 304014877656, 304015159849, 304015198491, 304015612977, 304015654449, 304015670845, 304015735230, 304015760755, 304015782600, 304015886635, 304015891560, 304015910465, 304015991859, 304016117016, 304016236142, 304016301044, 304016396792, 304016736262, 304016740280, 304016834182, 304016927852, 304016988593, 304017511166, 304017692899, 304017724696, 304017784619, 304018471905, 304018524266, 304018557139, 304018687390, 304018904347, 304018913410, 304019068022, 304019343104, 304019360530, 304019820492, 304019859086, 304019869817, 304019992992, 304020111681, 304020122768, 304020597828, 304020801018, 304021214011, 304021237581, 304021266564, 304021591409, 304021681153, 304021840632, 304021841490, 304021852571, 304021862896, 304022074714, 304022191825, 304022273180, 304022320022, 304022412931, 304022714040, 304022988086, 304023106522, 304023295165, 304023453113, 304023942504, 304024051200, 304024253662, 304024295446, 304024389407, 304024490235, 304024518669, 304024621510, 304025408518, 304025450048, 304025633727, 304025654042, 304025970442, 304026057991, 304026058871, 304026064638, 304026070796, 304026287369, 304026443155, 304026571749, 304026578272, 304026894120, 304027244357, 304027334253, 304027357277, 304027384854, 304028056767, 304028327709, 304028328378, 304028344004, 304028352287, 304028735355, 304028735637, 304029081253, 304029217814, 304029348353, 304029379890, 304029499495, 304029504164, 304029561221, 304029562865, 304030258647, 304030338536, 304030473440, 304030594059, 304030598579, 304030672935, 304030750640, 304030790928, 304030906307, 304030944771, 304031497852, 304031614670, 304031697649, 304031856672, 304031889464, 304031924408, 304031991838, 304032038819, 304032084850, 304032104085, 304032246874, 304032827507, 304032846287, 304032864468, 304033047120, 304033128238, 304033445575, 304033653755, 304033872290, 304034203837, 304034730164, 304034740468, 304034756277, 304034774720, 304034809708, 304034880920, 304034957548, 304035385190, 304036202595, 304036255640, 304036780405, 304036951377, 304036998591, 304037029142, 304037047195, 304037299562, 304037313275, 304037382347, 304037598449, 304037891143, 304038261125, 304038397769, 304038418922, 304038429497, 304038443764, 304038503742, 304038512243, 304038531057, 304038538324, 304038548536, 304038741502, 304038776851, 304038801818, 304038914229, 304039004845, 304039729204, 304039765212, 304039799316, 304039860985, 304039960892, 304040039171, 304040118049, 304040170057, 304040989718, 304041022411, 304041182248, 304041187923, 304041853764, 304041859069, 304041909977, 304042701751, 304042909546, 304043112294, 304043133723, 304043806676, 304043866492, 304043904409, 304043946123, 304043978305, 304044049899, 304044062126, 304044606308, 304044611777, 304044828571, 304044839714, 304044839914, 304045157627, 304045212784, 304045378252, 304045734319, 304045895998, 304045965349, 304045984996, 304046636096, 304046811457, 304046822958, 304046943542, 304047373966, 304047709235, 304047741493, 304048174532, 304048346362, 304048396553, 304048404697, 304048476461, 304048495182, 304048576660, 304048675644, 304048896430, 304048938239, 304049009331, 304049218343, 304049909659, 304050004047, 304050065680, 304050134707, 304050214093, 304050613282, 304050684980, 304051920913, 304052055322, 304052169197, 304052196766, 304052883747, 304052904217, 304053459716, 304053632727, 304053730542, 304053947193, 304054212754, 304054307474, 304054591184, 304054647778, 304054662764, 304054675406, 304054738303, 304054793427, 304054849541, 304055067077, 304055269863, 304055484848, 304056142334, 304056176134, 304056189280, 304056199321, 304056205861, 304056216098, 304056224082, 304056229561, 304056252261, 304056280351, 304056685154, 304056715300, 304056831634, 304056834474, 304057449932, 304058036669, 304058059951, 304058089627, 304058097974, 304058121022, 304058128363, 304058135825, 304058151282, 304058160693, 304058171351, 304058176985, 304058189536, 304058216295, 304058233488, 304058243904, 304058514166, 304059304932, 304059394232, 304059398569, 304059428756, 304059480812, 304060156137, 304060267628, 304060906877, 304060961234, 304061022888, 304061090202, 304061175476, 304061254396, 304061308459, 304062067249, 304062123623, 304065046529, 304065201108, 304065236688, 304065620191, 304065639655, 304066323159, 304066967895, 304067110425, 304067167404, 304067986084, 304068027587, 304068283518, 304068643498, 304068701066, 304068738161, 304068753838, 304068809173, 304068831098, 304068960253, 304069287287, 304069650523, 304069769334, 304070290294, 304070983648, 304071576248, 304071596502, 304072051385, 304073232536, 304073332263, 304073340669, 304073929758, 304073961050, 304074049378, 304074143237, 304074285684, 304074305849, 304074325226, 304074474278, 304074529074, 304074569557, 304074834903, 304074835241, 304074844376, 304074882122, 304075525535, 304075763114, 304075791424, 304076307617, 304076801070, 304076808494, 304076810340, 304076814341, 304076817035, 304077171558, 304077206586, 304077253828, 304077565326, 304077961615, 304078463839, 304078715654, 304078873811, 304078924811, 304079621477, 304079731768, 304080183189, 304080485037, 304080818321, 304080850382, 304080864068, 304080950806, 304080992338, 304081050382, 304081480081, 304081499877, 304081551059, 304081572778, 304081695013, 304082077680, 304082158286, 304082799029, 304082831790, 304082925112, 304082946933, 304083448338, 304083588813, 304084029574, 304084058816, 304084062092, 304084069884, 304084138997, 304084469092, 304084509004, 304085124554, 304085255453, 304085395557, 304085961569, 304086193982, 304086381027, 304087198908, 304087235242, 304087732737, 304087788361, 304087972737, 304088386500, 304088398889, 304088408683, 304089329922, 304089339814, 304089445491, 304089568843, 304089618809, 304089631707, 304089739961, 304090642040, 304090692293, 304090802068, 304090804695, 304091059717, 304091113999, 304091200647, 304091203683, 304091576682, 304091634704, 304092641629, 304093236020, 304093600138, 304094006617, 304094539174, 304094707519, 304095222749, 304095462815, 304095513062, 304095601355, 304095639494, 304095912770, 304095960083, 304095985713, 304096135549, 304096414604, 304096659943, 304096710023, 304097782043, 304097881690, 304099180074, 304099466246, 304099889709, 304099964539, 304100070417, 304100104201, 304100115695, 304100710707, 304100888224, 304100938450, 304101002055, 304101171468, 304102013747, 304102064776, 304102448378, 304102629013, 304102973753, 304103264138, 304103814013, 304104031351, 304104320167, 304104364864, 304104941627, 304105680708, 304105758938, 304106214949, 304106674070, 304106735130, 304106972352, 304107613639, 304107656230, 304107688458, 304107935017, 304108102226, 304108652713, 304109033410, 304109112049, 304109245289, 304109272163, 304109341510, 304109466306, 304109502284, 304109578121, 304109901818, 304110117755, 304110190399, 304110744761, 304111165215, 304111456861, 304111585141, 304111689036, 304111766945, 304111842718, 304111889171, 304111960849, 304111962614, 304112058538, 304112089069, 304112576264, 304112802295, 304113445907, 304113698648, 304113701095, 304114009070, 304114139049, 304114212437, 304114224894, 304114230836, 304114331234, 304114594233, 304114680420, 304114907792, 304115096323, 304115123441, 304115124080, 304115152124, 304115564140, 304115607666, 304116089239, 304116162341, 304116195173, 304116486008, 304116684839, 304116718466, 304116806384, 304116839101, 304116843596, 304116847676, 304116858555, 304117518977, 304117561148, 304117755808, 304117938476, 304118214418, 304118336597, 304118455534, 304118508247, 304118524404, 304118633205, 304118647950, 304118658132, 304118798687, 304119147791, 304119558132, 304120381007, 304120473728, 304121074260, 304121343790, 304121690226, 304121702768, 304121739996, 304121752941, 304121767191, 304122070861, 304122721267, 304122799574, 304122811073, 304122842559, 304122869648, 304123831615, 304123845894, 304124286380, 304124384564, 304125114404, 304126128352, 304126341407, 304128256628, 304128550066, 304129326948, 304129466323, 304129684117, 304129709839, 304130228553, 304130646812, 304130648127, 304131138008, 304131144725, 304131211466, 304131265090, 304131287339, 304131680072, 304132132982, 304132293648, 304132802861, 304132827672, 304133545382, 304134007410, 304134120874, 304134287685, 304134745902, 304136078196, 304136092295, 304136230648, 304136315014, 304136392680, 304136456326, 304137324579, 304137384776, 304137578001, 304138132312, 304138223076, 304138310642, 304138388548, 304138460076, 304138474141, 304138662670, 304138710091, 304138720160, 304138722043, 304138726650, 304138851659, 304138887096, 304138904247, 304139253220, 304139553966, 304139767143, 304140057139, 304140092898, 304141011649, 304141060080, 304141159211, 304141193932, 304141288858, 304141294190, 304141322993, 304141881333, 304142451639, 304142689571, 304142734603, 304143074924, 304143786618, 304143806022, 304144024710, 304144685657, 304145408948, 304145751018, 304145898584, 304145962769, 304146572049, 304146858621, 304147166025, 304147178152, 304147261588, 304147332388, 304147716521, 304147958334, 304148104676, 304148107616, 304148155666, 304148470905, 304148507765, 304148850478, 304149037077, 304149238118, 304149910990, 304150053826, 304150564553, 304150954188, 304151325129, 304152275681, 304152528383, 304152621013, 304152629052, 304152652531, 304152672539, 304152696381, 304152701833, 304152757194, 304153034345, 304153172259, 304153232611, 304153570223, 304153760357, 304153883646, 304153934863, 304154269545, 304154323134, 304154508195, 304154534499, 304154737671, 304154741912, 304154801101, 304154955911, 304154984782, 304155098708, 304155549468, 304156387672, 304156710452, 304156797879, 304156854960, 304156954037, 304157092642, 304157226763, 304157319503, 304157511723, 304157916683, 304158505822, 304158560951, 304158678395, 304158679000, 304158839369, 304158960880, 304159025615, 304159387955, 304159452626, 304159499703, 304159684116, 304160224916, 304160307419, 304160339007, 304160356360, 304161328439, 304161332633, 304161490044, 304161969793, 304162012732, 304162153647, 304163176026, 304163243267, 304163417385, 304163428099, 304163497589, 304163542292, 304163548890, 304163794272, 304163803460, 304164439226, 304164457417, 304164466938, 304164476984, 304164814332, 304164842038, 304165299434, 304165304443, 304165347633, 304165624663, 304165673294, 304165714614, 304166012236, 304166018104, 304166025254, 304166163574, 304166992360, 304167526124, 304167651358, 304168082873, 304168096610, 304168245177, 304168253163, 304168255729, 304168305301, 304168343127, 304168565200, 304168802817, 304168972735, 304169543930, 304169553805, 304169717470, 304169777296, 304169906165, 304169939291, 304170054232, 304170072393, 304170091587, 304170183212, 304170378987, 304170733390, 304170789568, 304170957041, 304171044148, 304171077991, 304171085298, 304171673388, 304171708299, 304172048317, 304172514811, 304172610678, 304172675537, 304172799410, 304173017711, 304173039072, 304173046189, 304173547950, 304173973636, 304174089315, 304174825119, 304174851090, 304175136852, 304175392674, 304175956012, 304176162355, 304176505507, 304176541715, 304176695129, 304176748615, 304177463861, 304177466396, 304177586277, 304177749062, 304177781781, 304177802510, 304177805429, 304177845642, 304177849349, 304177900729, 304177934224, 304177946772, 304177985668, 304178016244, 304178261104, 304178618575, 304178677104, 304178764902, 304178808919, 304178816516, 304178836140, 304179054363, 304180010340, 304180222257, 304180403317, 304180527308, 304180786674, 304180862809, 304180913440, 304181171042, 304181526810, 304181633454, 304181671845, 304182011022, 304182034972, 304182091359, 304182223272, 304182934916, 304182956771, 304182964330, 304182974298, 304183682940, 304183887811, 304183981953, 304184011780, 304184097057, 304184232984, 304184492475, 304184757290, 304184792556, 304185374488, 304186311001, 304186772986, 304186838900, 304186841977, 304187590467, 304187887458, 304189068743, 304189083407, 304189086449, 304189087429, 304189281013, 304189453706, 304189643501, 304189792314, 304189880649, 304189918269, 304189971020, 304190012687, 304190034850, 304190073723, 304190213026, 304190231289, 304190240812, 304190247890, 304190260972, 304190265721, 304190277956, 304190300201, 304190610791, 304191025050, 304191375641, 304191396216, 304191410183, 304191438204, 304191441280, 304191468513, 304191502971, 304191593662, 304191650367, 304191658841, 304191816565, 304191825192, 304191872526, 304192174769, 304192485745, 304192609089, 304192712843, 304192751909, 304192778302, 304192800047, 304192865056, 304192890151, 304192902507, 304192969906, 304192979274, 304193005153, 304193657996, 304194001893, 304194070351, 304194187610, 304194189576, 304194377573, 304194449969, 304194488265, 304194867552, 304195105927, 304195420342, 304195565991, 304196314060, 304196477767, 304196522136, 304196534343, 304196715218, 304196779813, 304196827702, 304196838603, 304197059626, 304197069832, 304197132736, 304197134417, 304197201987, 304197216774, 304197259078, 304197296466, 304197332197, 304197347689, 304197415685, 304197575479, 304197784221, 304197878318, 304198210068, 304198225853, 304198278975, 304198522141, 304198672057, 304199231985, 304199510783, 304199555379, 304199718220, 304199757494, 304199794281, 304199839065, 304199891251, 304200011277, 304200035475, 304200253393, 304200342748, 304200457547, 304200530963, 304200612482, 304200629377, 304200731279, 304200773073, 304201112723, 304201119981, 304201336445, 304201376319, 304201604426, 304201658459, 304201675827, 304201901669, 304201955254, 304202022068, 304202033091, 304202118806, 304202210112, 304202412201, 304202451283, 304204273231, 304204361072, 304204530916, 304204595169, 304204647523, 304204960467, 304205198374, 304205375053, 304205393458, 304205620409, 304205968898, 304205998900, 304206093646, 304206454934, 304206467327, 304206469948, 304206511838, 304206525229, 304206536792, 304206555955, 304206609160, 304206610197, 304206686418, 304207114082, 304207135407, 304207168740, 304208157265, 304208316286, 304208403685, 304208675184, 304208680235, 304208734744, 304208767934, 304208832324, 304209134740, 304209146002, 304209275051, 304209294644, 304209398617, 304209530127, 304209605984, 304210076616, 304210175977, 304210194129, 304210282669, 304210846882, 304210864005, 304210960597, 304211110525, 304211342556, 304211457983, 304211628109, 304212294676, 304212581248, 304212583361, 304212780317, 304212804099, 304212874115, 304213419720, 304213602750, 304214111031, 304214148090, 304214588925, 304214596655, 304214875253, 304214894624, 304214902324, 304214975508, 304215023798, 304215116884, 304215262015, 304215511407, 304215588002, 304215598767, 304215690468, 304215720540, 304215750393, 304215923013, 304216708402, 304217043659, 304217145698, 304217229327, 304217281190, 304217521306, 304217616567, 304217779497, 304217914728, 304218074147, 304218101258, 304218334942, 304218424257, 304219178295, 304219259713, 304219262908, 304219392092, 304219581659, 304220327163, 304220374310, 304220827702, 304220842069, 304221023050, 304221026094, 304221032846, 304221075053, 304221076819, 304221144884, 304221159385, 304221273837, 304221304557, 304221367798, 304221412057, 304221898699, 304222155273, 304222182014, 304222498362, 304222696066, 304222727714, 304222731828, 304223115634, 304223121649, 304223237334, 304223315296, 304223870919, 304223878519, 304224021930, 304224423347, 304224505745, 304224587624, 304224760733, 304224990872, 304225032505, 304225184474, 304225191749, 304225225711, 304225435634, 304225436202, 304225535440, 304225902469, 304225959908, 304226463622, 304226592997, 304226754932, 304226758694, 304226863544, 304226878248, 304226927358, 304226948129, 304227051559, 304227056139, 304227133928, 304227816080, 304228244912, 304228353722, 304228434798, 304228676466, 304228718176, 304228889875, 304228996279, 304229015816, 304229134584, 304229193286, 304229820314, 304229855843, 304229865522, 304229882250, 304229985094, 304230003523, 304230004200, 304230148146, 304230258366, 304231414534, 304231561160, 304231572162, 304231725307, 304231770407, 304231771078, 304231830665, 304232174809, 304232227755, 304232248219, 304232270389, 304232816474, 304232848803, 304233003840, 304233050862, 304233059839, 304233209554, 304233225586, 304233302653, 304233320687, 304233342230, 304233345376, 304233542069, 304233716327, 304233752532, 304233764845, 304233813579, 304233816775, 304233855054, 304233909672, 304233931860, 304233938287, 304233959447, 304233961317, 304234263560, 304234306602, 304234382530, 304234512256, 304234784288, 304234940193, 304235180005, 304235190721, 304235241078, 304235311466, 304235658292, 304235728173, 304235815500, 304236670802, 304237387497, 304237416632, 304237430641, 304237437831, 304237583019, 304237836260, 304237903590, 304237916142, 304237979955, 304238118356, 304238138516, 304238502262, 304238643939, 304238688604, 304238798293, 304239142748, 304239156584, 304239166917, 304239210509, 304239310681, 304239353471, 304239370643, 304239416332, 304239451985, 304239478020, 304239500100, 304239542109, 304239608971, 304239637322, 304239717008, 304240160122, 304240645430, 304241081316, 304241499031, 304241738316, 304241941498, 304242147015, 304242216068, 304242370177, 304242396052, 304242417678, 304242435273, 304242670091, 304242860986, 304243197177, 304243433507, 304243669509, 304243870847, 304244045321, 304244205662, 304244210427, 304244387175, 304244460249, 304244464716, 304244467892, 304244471644, 304244475579, 304244701189, 304244858916, 304244957813, 304245002933, 304245085864, 304245206330, 304245338061, 304245768234, 304245880807, 304245885078, 304245894176, 304246190029, 304246362843, 304246536648, 304246616490, 304246690313, 304246751429, 304246798296, 304246945172, 304246975283, 304246996488, 304247000068, 304247042810, 304247134989, 304247146638, 304247185265, 304247186554, 304247303305, 304247464387, 304247475505, 304247481438, 304247489730, 304247541571, 304247557937, 304248122511, 304248189798, 304248540778, 304248838105, 304248841425, 304248927078, 304249110806, 304249127238, 304249615848, 304249663942, 304249720143, 304249956518, 304250401743, 304250426319, 304250442874, 304250460270, 304250603344, 304250673610, 304250836687, 304251231043, 304251271848, 304251414436, 304251896795, 304251999750, 304252261353, 304252385386, 304252406771, 304252497378, 304252611191, 304253091017, 304253194293, 304253431690, 304253469984, 304253470308, 304253496946, 304253618736, 304253783425, 304253913146, 304253942075, 304253943834, 304253943980, 304254335527, 304254354773, 304254365397, 304254674200, 304254684774, 304254743434, 304254855943, 304255128355, 304255585183, 304255717609, 304256328967, 304256790779, 304256792606, 304256816103, 304257117381, 304257154537, 304257208055, 304257224267, 304257255567, 304257274173, 304257642491, 304257744812, 304257929804, 304258249326, 304258302101, 304258354710, 304258385358, 304258662429, 304258710421, 304258736199, 304258754978, 304258756078, 304258919218, 304259033465, 304259064007, 304259109249, 304259650506, 304260102227, 304260187128, 304260298299, 304260468441, 304260527254, 304260579967, 304260582080, 304260856354, 304260970004, 304261000281, 304261405432, 304261415651, 304261723905, 304261801279, 304261974172, 304261983798, 304262015012, 304262450521, 304262596363, 304262650429, 304262680118, 304262708218, 304262728208, 304262737391, 304262752268, 304262760313, 304262771008, 304262775047, 304262859742, 304262874735, 304262893883, 304262902692, 304262905519, 304262907284, 304262908743, 304262908964, 304262909314, 304262910321, 304262912610, 304262912967, 304262914399, 304262967455, 304262989996, 304263017889, 304263045850, 304263056423, 304263057689, 304263089616, 304263100190, 304263149515, 304263657023, 304263723507, 304263914278, 304263936235, 304263966020, 304263979372, 304263997992, 304263998331, 304264018111, 304264169220, 304264198379, 304264262286, 304264292444, 304264340332, 304264341717, 304264345924, 304264350564, 304264421345, 304264481131, 304264619818, 304264625426, 304264671264, 304264671931, 304264680516, 304264693172, 304264780782, 304264797233, 304264862205, 304265532857, 304265879162, 304265902290, 304266011961, 304266091501, 304266204172, 304266209456, 304266228545, 304266304098, 304266346547, 304266555659, 304266569289, 304266696944, 304266916684, 304266921992, 304266945155, 304266950024, 304267069002, 304267190553, 304267267904, 304267390997, 304267447120, 304267696050, 304268043561, 304268059499, 304268365249, 304268444331, 304268474206, 304268565352, 304268573068, 304268859780, 304269333076, 304269345490, 304269660880, 304269909098, 304270284885, 304270645035, 304270668066, 304270671098, 304270729611, 304270738150, 304270754240, 304270844015, 304270881528, 304271004485, 304271101780, 304271137004, 304271349757, 304271637321, 304271670704, 304271702422, 304271984880, 304271987117, 304272233976, 304272330186, 304272619660, 304272634423, 304273203302, 304273280057, 304273389027, 304273428491, 304273443313, 304273545855, 304273568573, 304273865894, 304273968878, 304274045313, 304274047922, 304274061194, 304274082305, 304274182687, 304274545143, 304274595007, 304274803040, 304274809829, 304274815607, 304275158199, 304275229508, 304275303919, 304275515823, 304275567627, 304275740472, 304275917590, 304276088179, 304276113415, 304276204037, 304276459496, 304276571232, 304278043625, 304278196289, 304278499470, 304278540211, 304278545364, 304278583304, 304278635484, 304278655833, 304278872464, 304278945868, 304279213696, 304279892410, 304279995639, 304280004904, 304280365877, 304280810862, 304281104483, 304281393473, 304281501121, 304281526414, 304281536430, 304282650696, 304282740966, 304282774324, 304282792192, 304282807550, 304282871905, 304282877615, 304282880930, 304282894431, 304283785927, 304283978138, 304284115377, 304284145821, 304284547973, 304285998606, 304286046603, 304286365304, 304286382376, 304286403101, 304286595198, 304286676988, 304286689974, 304286868586, 304286900983, 304287635256, 304287704722, 304287871905, 304287913461, 304287920623, 304288042913, 304288292953, 304288397688, 304288449093, 304288471223, 304288472246, 304288486393, 304288488377, 304288554049, 304288564164, 304288579279, 304288600521, 304288606079, 304288612647, 304288622108, 304288633574, 304288658181, 304288666364, 304288671286, 304288733852, 304288743326, 304288752410, 304288755331, 304288765018, 304288878570, 304289015443, 304289074423, 304289124474, 304289715707, 304289792947, 304289831509, 304289987102, 304290162681, 304290244587, 304290383071, 304290448363, 304290450252, 304290509906, 304290559103, 304290559305, 304290624894, 304290769212, 304290826247, 304290999342, 304291276492, 304291388831, 304291400285, 304291408652, 304291465636, 304291527099, 304291544536, 304291592769, 304291620767, 304291651966, 304291700926, 304291732270, 304291817544, 304291817619, 304291835434, 304291842533, 304291910556, 304291939933, 304291975840, 304292013004, 304292186745, 304292272941, 304292415597, 304292426986, 304292510795, 304292533918, 304292542113, 304292740510, 304292828193, 304292919844, 304293273051, 304293278310, 304293984352, 304294955169, 304296001517, 304296009961, 304296455654, 304296489820, 304296499061, 304296868333, 304297116578, 304298025127, 304298217946, 304298410833, 304298465855, 304298549343, 304298595003, 304298617240, 304298647783, 304298798693, 304298827016, 304298829339, 304298856331, 304298858730, 304298962115, 304299030830, 304299250383, 304299298837, 304300189284, 304300242862, 304300288421, 304300290933, 304300598643, 304300640386, 304300681054, 304300706627, 304300721772, 304300930982, 304301085636, 304301109330, 304301125591, 304301712995, 304301742338, 304301886966, 304302187249, 304302241852, 304302357667, 304302521626, 304302552816, 304302644300, 304302669872, 304302745911, 304302748566, 304302980954, 304303059785, 304303127079, 304303215339, 304304319058, 304304512856, 304304657870, 304304674757, 304304708973, 304304715332, 304304978370, 304305005683, 304305042838, 304305150003, 304305241068, 304305983246, 304306182810, 304306464380, 304306474736, 304306600297, 304306702091, 304307187871, 304307232885, 304307234638, 304307374846, 304307691611, 304307740311, 304307760386, 304307946969, 304307968489, 304308059985, 304308096410, 304308098967, 304308103660, 304308229588, 304308509399, 304308569171, 304308650390, 304309062835, 304309143173, 304309211173, 304309739366, 304309834065, 304309843635, 304309891950, 304309924301, 304310089001, 304310121712, 304310676686, 304310725405, 304310848728, 304311034520, 304311190104, 304311201101, 304311204048, 304311327468, 304311387527, 304311452325, 304311504052, 304311548092, 304311730581, 304311840711, 304311961572, 304312001666, 304312025709, 304312095912, 304312128024, 304312602135, 304312649285, 304313696750, 304313779467, 304313810365, 304313859688, 304313874158, 304313909970, 304313972901, 304314046265, 304314364319, 304314515106, 304314575479, 304314640738, 304314704878, 304314712489, 304314721872, 304314761927, 304314811825, 304314908727, 304314928661, 304314929929, 304315012085, 304315039608, 304315712041, 304316109610, 304316373896, 304316541453, 304316564978, 304316592585, 304316685204, 304316917149, 304317008938, 304317199071, 304317210897, 304317236075, 304317270031, 304317306355, 304317474043, 304317543149, 304317604699, 304317701897, 304317769066, 304317891061, 304318008191, 304319033807, 304319034715, 304319194318, 304319675951, 304320274703, 304320801043, 304321193372, 304321209900, 304321223485, 304321510183, 304321551338, 304321770779, 304321901952, 304321931188, 304322075384, 304322079304, 304322094107, 304322171478, 304322281676, 304322311342, 304322346765, 304322467944, 304322572687, 304322580553, 304322733206, 304323398377, 304323517386, 304323790569, 304323850129, 304324026593, 304324029632, 304324047560, 304324070504, 304324096137, 304324162079, 304324314939, 304324529069, 304324588690, 304324921268, 304324958530, 304326254052, 304326629996, 304326807915, 304326926602, 304326932657, 304326988739, 304327108349, 304327300910, 304327347984, 304327458400, 304328068420, 304328069874, 304328206102, 304328217231, 304328227895, 304328364028, 304328381261, 304328500126, 304328581244, 304328753842, 304328946449, 304329084043, 304329157344, 304329366814, 304329564454, 304329742439, 304329779540, 304329962869, 304330152116, 304330257941, 304330344569, 304330358829, 304330368247, 304330391089, 304330451102, 304330535661, 304330603563, 304330664922, 304330847750, 304330890213, 304330945899, 304331038490, 304331531089, 304331646604, 304331683280, 304331816053, 304331866363, 304331995010, 304332183603, 304332253428, 304332414432, 304332525717, 304332532555, 304333423919, 304333425061, 304333476817, 304333512390, 304333525403, 304333531051, 304333584196, 304333633375, 304333820009, 304333973102, 304334235649, 304334662225, 304335225501, 304335272859, 304335458699, 304335466697, 304335835935, 304335862723, 304335875040, 304335985525, 304335999721, 304336009356, 304336247790, 304336273413, 304336465762, 304336845351, 304336880759, 304336894853, 304338022962, 304338106753, 304338244242, 304338295961, 304338322220, 304338376441, 304338731164, 304338874447, 304339716872, 304339810737, 304339866195, 304339876695, 304339887497, 304339887914, 304340147183, 304340147517, 304340278747, 304340372499, 304340391280, 304340504572, 304340590804, 304340669753, 304340718959, 304340795360, 304340835884, 304340938328, 304341063694, 304341234202, 304341607215, 304341779106, 304342183676, 304342690943, 304342996050, 304342998402, 304343026166, 304343120189, 304343227127, 304343410929, 304343487185, 304343504102, 304343596243, 304343661706, 304343767763, 304344009823, 304344156927, 304344167041, 304344542439, 304344670732, 304344992235, 304345044937, 304345711428, 304345833434, 304345840349, 304345870432, 304346534688, 304346995487, 304348035235, 304348473939, 304349176040, 304349447444, 304349568316, 304350096783, 304350126214, 304350323176, 304350540989, 304351728860, 304351895354, 304352150468, 304352169142, 304352187108, 304352198582, 304352326630, 304352345538, 304352355583, 304352361085, 304352405646, 304352477638, 304352712718, 304352753659, 304352829695, 304352886794, 304353053002, 304353093589, 304353138258, 304353308533, 304353389011, 304353414299, 304353440426, 304353460508, 304353901045, 304353906233, 304353918539, 304353951892, 304353991580, 304354077388, 304354086893, 304354087551, 304354109831, 304354115619, 304354168515, 304354168611, 304354214641, 304354272322, 304354423310, 304354476111, 304354509032, 304354544928, 304354546175, 304354567400, 304354580014, 304354601860, 304354604751, 304354620297, 304354632556, 304354641486, 304354648081, 304354657012, 304354657682, 304354835136, 304354902063, 304355014060, 304355086264, 304355283771, 304355368913, 304355371402, 304355502054, 304356404509, 304356591195, 304356651976, 304356876299, 304356966468, 304357034651, 304357222075, 304357276013, 304357424554, 304357428525, 304357438352, 304357507150, 304357560758, 304357709857, 304357833685, 304357975653, 304358309512, 304358487530, 304359140876, 304359440566, 304359440682, 304359456636, 304359469374, 304359471353, 304359523658, 304359802154, 304359820860, 304359899579, 304359945891, 304360148738, 304360263963, 304360506808, 304360565388, 304360652994, 304360744350, 304360785881, 304360859338, 304361076323, 304361093410, 304361144218, 304361232699, 304361356813, 304361661041, 304362512434, 304363395379, 304363464064, 304363497321, 304363526967, 304363552159, 304363565547, 304363584886, 304363592999, 304363714626, 304363865373, 304364020923, 304364022911, 304364028791, 304364055685, 304364057624, 304364098935, 304364104232, 304364129355, 304364154913, 304364213912, 304364264473, 304364266597, 304364295927, 304364366599, 304364427660, 304364564996, 304364606390, 304364607514, 304364625685, 304364725307, 304364739113, 304364750988, 304364775643, 304364816076, 304365240741, 304365328695, 304365354959, 304365361294, 304365379954, 304365423408, 304365474513, 304365486167, 304365489187, 304365504917, 304365505096, 304365594729, 304365627694, 304365670351, 304365775807, 304365777604, 304365793011, 304365847070, 304365894132, 304366082667, 304366083413, 304366087899, 304366133690, 304366162863, 304366186888, 304366228174, 304366503988, 304366538285, 304366711805, 304366750310, 304366756585, 304366771053, 304366779713, 304366844365, 304366861733, 304366911353, 304366940897, 304367071174, 304367109937, 304367118205, 304367120529, 304367183861, 304367210705, 304367335141, 304367436309, 304367631538, 304368130322, 304368298768, 304368354159, 304368414656, 304368455914, 304368520375, 304368645381, 304368862605, 304368869673, 304368881623, 304368995623, 304369037440, 304369055285, 304369058515, 304369102034, 304369117396, 304369373845, 304370072286, 304370169626, 304370296038, 304370364847, 304370459193, 304370462106, 304371176603, 304371313182, 304371775772, 304371827470, 304372045989, 304372139414, 304372352076, 304372357174, 304372365421, 304372599036, 304372632554, 304372810377, 304372836516, 304372854871, 304372934216, 304372935615, 304373000364, 304373048216, 304373092410, 304373166172, 304373276165, 304373292240, 304373439265, 304373553026, 304373575153, 304373610582, 304373806873, 304373883590, 304373919224, 304373959719, 304374239181, 304374290848, 304374295715, 304374628199, 304374688868, 304374724159, 304374941453, 304374948133, 304375030018, 304375111237, 304375218457, 304375226410, 304375240099, 304375521329, 304375524917, 304375912649, 304376032941, 304376042576, 304376073245, 304376090455, 304376138740, 304376162087, 304376239882, 304376370649, 304376446906, 304376490349, 304376828913, 304376834827, 304377093485, 304377183960, 304377190500, 304377192443, 304377225161, 304377320951, 304377392005, 304377426110, 304377563229, 304377566434, 304377604285, 304377632949, 304377717143, 304377771326, 304377801595, 304377854545, 304377882214, 304377921931, 304377949597, 304378173448, 304378181172, 304378188441, 304378193138, 304378586887, 304378652403, 304378695532, 304378834457, 304378995946, 304379041160, 304379045156, 304379047952, 304379067007, 304379108423, 304379132583, 304379147432, 304379165191, 304379234899, 304379239302, 304379257351, 304379394483, 304379863248, 304379888303, 304379902313, 304380073768, 304380180949, 304380193185, 304381086962, 304381220159, 304381245595, 304381282762, 304381330777, 304381371415, 304381386396, 304381402744, 304381455189, 304381501775, 304381505088, 304381509332, 304381524643, 304381631772, 304381643307, 304381650499, 304381653406, 304381655166, 304381721681, 304382429128, 304382485939, 304382596385, 304382708553, 304382888143, 304382984011, 304383059988, 304383072445, 304383216458, 304383271851, 304383375655, 304383380481, 304383496015, 304383686668, 304383688239, 304383689422, 304383701628, 304383742594, 304383795726, 304383833325, 304383866294, 304383899339, 304383910733, 304383921162, 304383922602, 304383927790, 304383932739, 304383991981, 304384080452, 304384090903, 304384097897, 304384104046, 304384112224, 304384117093, 304384133283, 304384138509, 304384156541, 304384215205, 304384220210, 304384485029, 304384522103, 304384697892, 304384945078, 304385049803, 304385072926, 304385194738, 304385255250, 304385311717, 304385343363, 304385349433, 304385377429, 304385463227, 304385480741, 304385629935, 304385810124, 304385910494, 304386302860, 304386352318, 304386421741, 304386604549, 304386735558, 304386767158, 304386783212, 304386794382, 304386796141, 304386829062, 304386850952, 304386867372, 304386900324, 304386979474, 304387017283, 304387126894, 304387316110, 304387340972, 304387353122, 304387698340, 304387800472, 304387827378, 304387835168, 304387854512, 304388145171, 304388279346, 304388513011, 304388543026, 304388547734, 304388556736, 304388570304, 304388634697, 304388817981, 304388818696, 304388824292, 304388828863, 304388998672, 304389244752, 304389254806, 304389276915, 304389281861, 304389308676, 304389381342, 304389481120, 304389549810, 304389556455, 304389573303, 304389591116, 304389603995, 304389616569, 304389709013, 304389830147, 304389830320, 304389951192, 304390023266, 304390072785, 304390232025, 304390240610, 304390264224, 304390461031, 304390490140, 304390557833, 304390559364, 304390610584, 304390712942, 304390730588, 304390777849, 304390875106, 304390923174, 304390950080, 304390969769, 304390985653, 304391016400, 304391185659, 304391218777, 304391354940, 304391475693, 304391479443, 304391509880, 304391521198, 304391599820, 304391665971, 304391739495, 304391774925, 304391817499, 304391822250, 304391883171, 304391963652, 304392008483, 304392031795, 304392071803, 304392076957, 304392276950, 304392504004, 304392695199, 304392722077, 304392745063, 304392921493, 304392932705, 304392969485, 304393072602, 304393142636, 304393219868, 304393286473, 304393440896, 304393446575, 304393525570, 304393548453, 304394152636, 304394182121, 304394206222, 304394231063, 304394377520, 304394584086, 304394632475, 304394639175, 304394650214, 304394710756, 304394740812, 304394809592, 304395264581, 304395305063, 304395336384, 304395347697, 304395356037, 304395507466, 304396913748, 304397033447, 304397144795, 304397350827, 304397499984, 304397542937, 304397613150, 304397637554, 304397888195, 304397981172, 304398032386, 304398388667, 304398390355, 304398471458, 304398601513, 304398620655, 304398637815, 304398646836, 304398654173, 304398841761, 304399260174, 304399281970, 304399282434, 304399557936, 304399774325, 304399924059, 304400142047, 304400265983, 304400321607, 304400461536, 304400488748, 304400553990, 304400595191, 304400654222, 304400683254, 304400780001, 304400852786, 304400863394, 304400911145, 304400931680, 304400933575, 304400942601, 304400991546, 304401006691, 304401036283, 304401122746, 304401195152, 304401575003, 304401727606, 304401830519, 304401966845, 304401997750, 304402090194, 304402093785, 304402168646, 304402194661, 304402224131, 304402248367, 304402260004, 304402285763, 304402297856, 304402459853, 304402586070, 304402906652, 304402926246, 304403008385, 304403079526, 304403174135, 304403349446, 304403390083, 304403402998, 304403480317, 304403484760, 304403679809, 304403696584, 304403735568, 304403741406, 304403745295, 304403802213, 304403821229, 304403837541, 304403858465, 304403990118, 304404423226, 304404443286, 304404619861, 304404633013, 304404647468, 304404649309, 304404655453, 304404684229, 304404688815, 304404689267, 304404690056, 304404692289, 304404872766, 304404884774, 304405019413, 304405031463, 304405056350, 304405074162, 304405108957, 304405274461, 304405290388, 304405299535, 304405350929, 304405425396, 304405584520, 304405593637, 304405799876, 304405811583, 304405828089, 304405855773, 304405858292, 304405890015, 304405918802, 304405927596, 304405930441, 304405951980, 304405974120, 304405980951, 304405983351, 304405993615, 304406002611, 304406004377, 304406012598, 304406162891, 304406322833, 304406407071, 304406434745, 304406538484, 304406575357, 304406580960, 304406605389, 304406609296, 304406720482, 304406730036, 304406755399, 304406757650, 304407030629, 304407083341, 304407095494, 304407098631, 304407107169, 304407331630, 304407333482, 304407432969, 304407471974, 304407548119, 304407570877, 304408111341, 304408541026, 304408599493, 304408601295, 304408666194, 304408777341, 304408995770, 304409054194, 304409112823, 304409125409, 304409334298, 304409401632, 304409623421, 304409858346, 304409861032, 304409953775, 304409984927, 304410022886, 304410033126, 304410035241, 304410039100, 304410049735, 304410050583, 304410062570, 304410072872, 304410090252, 304410100341, 304410120594, 304410132057, 304410156729, 304410189061, 304410228077, 304410253807, 304410258771, 304410291252, 304410317040, 304410393624, 304410407774, 304410487506, 304410559908, 304410588041, 304410639019, 304410655049, 304410687258, 304410693191, 304410719679, 304411338771, 304411459002, 304411539302, 304411670811, 304411821920, 304411826720, 304412009339, 304412013489, 304412027742, 304412091689, 304412200062, 304412204484, 304412214945, 304412235143, 304412314671, 304412373054, 304412381869, 304412446245, 304412469607, 304412523822, 304412556392, 304412615939, 304412653351, 304412778319, 304412779742, 304412816568, 304413133764, 304413138525, 304413176440, 304413222934, 304413233681, 304413275497, 304413316517, 304413365372, 304413666652, 304413668297, 304413736198, 304413736381, 304413738609, 304413749741, 304413888450, 304413914700, 304413920402, 304413941785, 304414009865, 304414023934, 304414024028, 304414038804];


            $resource = "Property";
            $class = "ALL";

            $query = 'ListingKey='.implode(',', $keys);

            $results = $rets -> Search(
                $resource,
                $class,
                $query,
                [
                    'Select' => 'ListingKey,MlsStatus'
                ]
            );

            $listings = $results -> toArray();

            foreach($listings as $listing) {

                BrightListings::find($listing['ListingKey'])
                -> update([
                    'MlsStatus' => $listing['MlsStatus']
                ]);

            }

            //$this -> queueProgress(100);

            $rets -> Disconnect();

            return true;

        }

    }

    public function bright_remove_agents()
    {
        ini_set('memory_limit', '-1');

        $rets = Helper::rets_login();

        $resource = 'ActiveAgent';
        $class = 'ActiveMember';

        $query = '(MemberStatus=|Active)';

        $results = $rets -> Search(
            $resource,
            $class,
            $query,
            [
                'Count' => '0',
                'Select' => 'MemberKey',
            ]
        );

        $agents_in_bright = $results -> toArray();
        $agents_in_bright_count = count($agents_in_bright);
        $agents_in_bright_array = [];
        foreach ($agents_in_bright as $agent_in_bright) {
            $agents_in_bright_array[] = (int) $agent_in_bright['MemberKey'];
        }

        $agents_in_db = BrightAgentRoster::where('active', 'yes') -> get() -> pluck('MemberKey') -> toArray();
        $agents_in_db_count = count($agents_in_db);

        // dd($agents_in_bright_count, $agents_in_db_count);

        $deactivate_agents = [];
        foreach ($agents_in_db as $agent) {
            if (! in_array($agent, $agents_in_bright_array)) {
                $deactivate_agents[] = $agent;
            }
        }

        if (count($deactivate_agents) > 0) {
            BrightAgentRoster::whereIn('MemberKey', $deactivate_agents)
            -> update([
                'active' => 'no',
            ]);
        }

        $missing_agents = [];
        foreach ($agents_in_bright_array as $agent) {
            if (! in_array($agent, $agents_in_db)) {
                $missing_agents[] = $agent;
            }
        }

        if(count($missing_agents) > 0) {

            $agents_in_db_string = implode(', ', $missing_agents);

            $query = '(MemberKey='.$agents_in_db_string.')';

            $results = $rets -> Search(
                $resource,
                $class,
                $query,
                [
                    'Count' => 0,
                    'Limit' => 5000,
                ]
            );

            $agents = $results -> toArray();

            if (count($agents) > 0) {
                foreach ($agents as $agent) {
                    $agent_details = array_filter($agent);
                    $agent['active'] = 'yes';
                    $MemberKey = $agent['MemberKey'];
                    unset($agent_details['MemberKey']);

                    $add_agent = BrightAgentRoster::create(
                        ['MemberKey' => $MemberKey],
                        $agent_details
                    );

                    $add_agent -> save();
                }
            }
        }

        return false;

        dd('deactivate = '.count($deactivate_agents).' missing = '.count($missing_agents));

        //dd($agents_in_bright_array, $agents_in_db);

        return false;

        // $agents_in_db_array = BrightAgentRoster::select($select)
        // -> where(function($query) {
        //     $query -> where('removal_date_checked', '!=', date('Y-m-d'))
        //     -> orWhereNull('removal_date_checked');
        // })
        // // -> where('active', 'yes')
        // -> limit($search_for)
        // -> get()
        // -> pluck('MemberKey')
        // -> toArray();

        // if (count($agents_in_db_array) < $search_for) {
        //     $search_for = count($agents_in_db_array);
        // }

        // $data[] = 'search_for = '.$search_for.', agents_in_db_array = '.count($agents_in_db_array);

        // if ($search_for > 0) {

        //     $agents_in_db_string = implode(', ', $agents_in_db_array);

        //     $query = '(MemberKey='.$agents_in_db_string.')';

        //     $results = $rets -> Search(
        //         $resource,
        //         $class,
        //         $query,
        //         [
        //             'Count' => 0
        //         ]
        //     );

        //     $agents = $results -> toArray();
        //     $total_found = count($agents);
        //     $data[] = 'total_found = '.$total_found;

        //     // if not all agents in db are found in bright
        //     if ($total_found != $search_for) {

        //         $data[] = 'Found Missing';
        //         $MemberKeys = [];

        //         $increment = 50 / count($agents);
        //         $progress = 50;
        //         foreach ($agents as $agent) {
        //             $MemberKeys[] = $agent['MemberKey'];
        //             $progress += $increment;
        //             $this -> queueProgress($progress);
        //         }

        //         $not_found = array_diff($agents_in_db_array, $MemberKeys);
        //         dump($not_found);

        //         $deactivate_agents = BrightAgentRoster::whereIn('MemberKey', $not_found)
        //         -> update([
        //             'active' => 'no',
        //         ]);

        //     }

        //     $update_removal_date_checked = BrightAgentRoster::whereIn('MemberKey', $agents_in_db_array)
        //     -> update([
        //         'removal_date_checked' => date('Y-m-d')
        //     ]);
        //     dump($update_removal_date_checked);

        // }

        //$this -> queueData([$data], true);
    }

    public function bright_update_agents(Request $request)
    {
        $rets_config = new \PHRETS\Configuration;
        $rets_config -> setLoginUrl(config('global.rets_url'))
        -> setUsername(config('global.rets_username'))
        -> setPassword(config('global.rets_password'))
        -> setRetsVersion('RETS/1.7.2')
        -> setUserAgent('Bright RETS Application/1.0')
        -> setHttpAuthenticationMethod('digest') // or 'basic' if required
        -> setOption('use_post_method', true)
        -> setOption('disable_follow_location', false);

        $rets = new \PHRETS\Session($rets_config);
        $connect = $rets -> Login();

        $log = new Logger('PHRETS');
        $log -> pushHandler(new StreamHandler('php://stdout', Logger::DEBUG));
        $log -> warning('Foo');
        $log -> error('Bar');
        $rets -> setLogger($log);

        $resource = 'ActiveAgent';
        $class = 'ActiveMember';

        $mod_time = date('Y-m-d H:i:s', strtotime('-25 hour'));
        $mod_time = str_replace(' ', 'T', $mod_time);
        $query = '(ModificationTimestamp='.$mod_time.'+)';

        $results = $rets -> Search(
            $resource,
            $class,
            $query,
            [
                'Count' => 0,
            ]
        );

        $agents = $results -> toArray();
        $total_found = count($agents);

        if ($total_found > 0) {
            foreach ($agents as $agent) {
                $agent_details = array_filter($agent);
                $MemberKey = $agent['MemberKey'];
                unset($agent_details['MemberKey']);

                $add_agent = BrightAgentRoster::firstOrCreate(
                    ['MemberKey' => $MemberKey],
                    $agent_details
                );

                $add_agent -> save();
            }
        }

        //$rets -> Disconnect();
    }

    public function bright_update_offices(Request $request)
    {
        $rets_config = new \PHRETS\Configuration;
        $rets_config -> setLoginUrl(config('global.rets_url'))
        -> setUsername(config('global.rets_username'))
        -> setPassword(config('global.rets_password'))
        -> setRetsVersion('RETS/1.7.2')
        -> setUserAgent('Bright RETS Application/1.0')
        -> setHttpAuthenticationMethod('digest')
        -> setOption('use_post_method', true)
        -> setOption('disable_follow_location', false);

        $rets = new \PHRETS\Session($rets_config);

        $connect = $rets -> Login();

        $resource = 'Office';
        $class = 'Office';

        $mod_time = date('Y-m-d H:i:s', strtotime('-12 hour'));
        $mod_time = str_replace(' ', 'T', $mod_time);
        $query = '(ModificationTimestamp='.$mod_time.'+)';

        if (Helper::access_protected_property($rets, 'rets_session_id') == '') {
            // $this -> queueData(['login failed, retrying'], true);
            sleep(5);
            $rets = new \PHRETS\Session($rets_config);
            $connect = $rets -> Login();
        }

        Log::debug($this -> job -> uuid());

        return false;

        $results = $rets -> Search(
            $resource,
            $class,
            $query,
            [
                'Count' => 0,
            ]
        );

        $offices = $results -> toArray();
        $total_found = count($offices);

        echo 'found = '.$total_found.'<br>';

        $count_before = BrightOffices::get() -> count();

        if ($total_found > 0) {
            foreach ($offices as $office) {
                $office_details = array_filter($office);
                $OfficeKey = $office['OfficeKey'];
                unset($office_details['OfficeKey']);

                $add_office = BrightOffices::firstOrCreate(
                    ['OfficeKey' => $OfficeKey],
                    $office_details
                );

                $add_office -> save();
            }
        }

        $rets -> Disconnect();
    }

    public function add_addresses_to_bright(Request $request)
    {
        $addresses = AgentsAddresses::where('found_status', 'found') -> get();
    }


    public function add_documents()
    {
        // $transactions = Transactions::whereIn('docs_added', ['no']) -> where('data_source', 'skyslope') -> inRandomOrder() -> limit(100) -> get();
        $transactions = Transactions::where('transactionId', '12212156') -> orWhere('listingId', '6339417') -> get();

        if (count($transactions) > 0) {
            // $stats = DB::select(
            //     "select
            //     ( select count(*) from archives.transactions where data_source = 'skyslope' ) as total,
            //     ( select count(*) from archives.transactions where data_source = 'skyslope' and docs_added_run = 'yes' ) as added_run,
            //     ( select count(*) from archives.transactions where data_source = 'skyslope' and docs_added = 'yes' ) as added,
            //     ( select count(*) from archives.transactions where data_source = 'skyslope' and docs_added = 'transaction not found' ) as transaction_not_found,
            //     ( select count(*) from archives.transactions where data_source = 'skyslope' and docs_added = 'download failed' ) as download_failed,
            //     ( select count(*) from archives.transactions where data_source = 'skyslope' and docs_added = 'docs not found' ) as docs_not_found,
            //     ( select count(*) from archives.transactions where data_source = 'skyslope' and docs_added = 'no response' ) as no_response,
            //     ( select count(*) from archives.transactions where data_source = 'skyslope' and docs_added = 'none remaining' ) as none_remaining,
            //     ( select count(*) from archives.transactions where data_source = 'skyslope' and docs_added = 'error' ) as error,
            //     ( select count(*) from archives.transactions where data_source = 'skyslope' and docs_added = 'no' ) as not_added"
            // );
            // $this -> queueData([$stats], true);

            $data = '';
            foreach ($transactions as $transaction) {
                $data .= "(listingGuid = '".$transaction -> listingGuid."' and saleGuid = '".$transaction -> saleGuid."') or ";
            }
            // $this -> queueData([$data], true);
            //$this -> queueData(['count' => count($transactions)], true);

            $auth = $this -> skyslope_auth();
            $session = $auth['Session'];

            $progress = 1;
            //$this -> queueProgress($progress);

            $downloads = [];

            foreach ($transactions as $transaction) {

                $type = $transaction -> objectType;
                $id = $transaction -> saleGuid;
                if ($type == 'listing') {
                    $id = $transaction -> listingGuid;
                }

                $listingGuid = $type == 'listing' ? $id : 0;
                $saleGuid = $type == 'sale' ? $id : 0;

                $dir = 'doc_management/archives/'.$listingGuid.'_'.$saleGuid;
                if (! Storage::exists($dir)) {
                    Storage::makeDirectory($dir);
                }
                File::cleanDirectory(Storage::path($dir));

                $transaction -> docs_added_run = 'yes';
                $transaction -> save();

                $headers = [
                    'Content-Type' => 'application/json',
                    'Session' => $session,
                ];

                $client = new \GuzzleHttp\Client([
                    'headers' => $headers,
                ]);

                $response = null;

                try {
                    if ($type == 'listing') {
                        $response = $client -> request('GET', 'https://api.skyslope.com/api/files/listings/'.$listingGuid);
                    } elseif ($type == 'sale') {
                        $response = $client -> request('GET', 'https://api.skyslope.com/api/files/sales/'.$saleGuid);
                    }

                    dd($response -> getBody() -> getContents());
                    if ($response) {
                        $headers = $response -> getHeaders();
                        $remaining = $headers['x-ratelimit-remaining'][0];

                        if ($remaining > 0) {
                            $contents = $response -> getBody() -> getContents();
                            $contents = preg_replace('/[\x00-\x1F\x80-\xFF]/', '', $contents);
                            $contents = json_decode($contents, true);

                            $documents = $contents['value']['documents'];

                            if (count($documents) > 0) {
                                foreach ($documents as $document) {
                                    $add_document = Documents::firstOrCreate([
                                        'id' => $document['id'],
                                    ]);

                                    $downloads[] = ['from' => $document['url'], 'to' => $dir.'/'.$document['fileName']];

                                    $file_location = $dir.'/'.$document['fileName'];

                                    foreach ($document as $col => $value) {
                                        if (! in_array($col, ['fileSize', 'pages'])) {
                                            $add_document -> $col = $value;
                                        }
                                    }

                                    $add_document -> file_location = $file_location;
                                    $add_document -> listingGuid = $listingGuid;
                                    $add_document -> saleGuid = $saleGuid;

                                    $add_document -> save();
                                }

                                $transaction -> docs_added = 'yes';
                                $transaction -> save();
                            } else {
                                $transaction -> docs_added = 'docs not found';
                                $transaction -> save();
                            }
                        } else {
                            $transaction -> docs_added = 'none remaining';
                            $transaction -> save();
                        }
                    } else {
                        $transaction -> docs_added = 'no response';
                        $transaction -> save();
                    }
                } catch (Throwable $e) {
                    $transaction -> docs_added = 'transaction not found';
                    $transaction -> save();
                }

                dump($transaction);


                $progress += 1;
                //$this -> queueProgress($progress);
            }

            if (count($downloads) > 0) {
                $progress_increment = round((1 / count($downloads)) * 100);

                foreach ($downloads as $download) {
                    $progress += $progress_increment;
                    //$this -> queueProgress($progress);

                    try {
                        $file_contents = gzdecode(file_get_contents($download['from']));
                        Storage::put($download['to'], $file_contents);
                    } catch (Throwable $e) {
                        $transaction -> docs_added = 'download failed';
                        $transaction -> save();
                    }
                }
            } else {

                // $transaction -> docs_added = 'docs not found';
                // $transaction -> save();
            }

            //$this -> queueProgress(100);
        }



        //$this -> queueProgress(100);
    }

    public function skyslope_auth()
    {
        $timestamp = str_replace(' ', 'T', gmdate('Y-m-d H:i:s')).'Z';

        $key = config('global.skyslope_key');
        $client_id = config('global.skyslope_client_id');
        $client_secret = config('global.skyslope_client_secret');
        $secret = config('global.skyslope_secret');

        $str = $client_id.':'.$client_secret.':'.$timestamp;

        $hmac = base64_encode(hash_hmac('sha256', $str, $secret, true));

        $headers = [
            'Content-Type' => 'application/json',
            'Authorization' => 'SS '.$key.':'.$hmac,
            'Timestamp' => $timestamp,
        ];

        $json = [
            'clientID' => $client_id,
            'clientSecret' => $client_secret,
        ];

        $client = new \GuzzleHttp\Client([
            'headers' => $headers,
            'json' => $json,
        ]);

        $r = $client -> request('POST', 'https://api.skyslope.com/auth/login');
        $response = $r -> getBody() -> getContents();

        return json_decode($response, true);
    }

    public function update_encrypted_fields()
    {
        $loan_officers = LoanOfficersNew::get();

        foreach ($loan_officers as $loan_officer) {
            $loan_officer -> soc_sec = Crypt::encrypt($loan_officer -> soc_sec);
            $loan_officer -> save();
        }
    }

    public function signs_and_posts(Request $request)
    {

        // $invoices = BillingInvoices::select(['in_id', 'in_date_sent', 'in_amount', 'in_agent_fullname'])
        // -> where('in_date_sent', '>', '2021-07-31')
        // -> whereHas('items', function (Builder $query) {
        //     $query -> where('in_item_desc', 'like', '%sign%')
        //     -> orWhere('in_item_desc', 'like', '%post%');
        // })
        // -> with(['items' => function($query) {
        //     $query -> where('in_item_desc', 'like', '%sign%')
        //     -> orWhere('in_item_desc', 'like', '%post%');
        // }])
        // -> limit(10)
        // -> get();

        $items = BillingInvoicesItems::select(['in_invoice_id', 'in_item_quantity', 'in_item_desc', 'in_item_total'])
        -> where(function ($query) {
            $query -> where('in_item_desc', 'like', '%sign%')
            -> orWhere('in_item_desc', 'like', '%post%');
        })
        -> whereHas('invoice', function (Builder $query) {
            $query -> where('in_date_sent', '>', '2021-07-31')
            -> where('in_type', 'charge');
        })
        -> with(['invoice' => function ($query) {
            $query -> where('in_date_sent', '>', '2021-07-31')
            -> where('in_type', 'charge')
            -> select(['in_id', 'in_type', 'in_agent_fullname', 'in_date_sent']);
        }])
        -> get();

        dd($items);
    }

    public function menu(Request $request)
    {
        return view('/tests/menu');
    }

    public function agent_data(Request $request)
    {
        $agents = Agents::select(['id', 'first', 'last', 'email1'])
        -> where('active', 'yes')
        -> with(['docs', 'licenses'])
        -> get()
        -> toJson();

        dd($agents);
    }

    public function alpine(Request $request)
    {
        return view('/tests/alpine');
    }

    public function test_connection() {

        try {

            $rets = Helper::rets_login();

            $resource = 'Office';
            $class = 'Office';

            $mod_time = date('Y-m-d H:i:s', strtotime('-12 hour'));
            $mod_time = str_replace(' ', 'T', $mod_time);
            $query = '(ModificationTimestamp='.$mod_time.'+)';

            $results = $rets -> Search(
                $resource,
                $class,
                $query
            );

        } catch(RETSException $e) {
            return $e -> getMessage();
        } catch(Throwable $e) {
            return $e -> getMessage();
        }

        dd($results);
    }

}
